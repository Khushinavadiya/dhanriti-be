# Generated by Django 4.2.2 on 2023-06-25 10:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('dhanriti', '0018_alter_note_part_alter_note_story'),
    ]

    operations = [
        migrations.CreateModel(
            name='Clap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.UUIDField(db_index=True, default=uuid.uuid4, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('deleted', models.BooleanField(db_index=True, default=False)),
                ('clapper', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Leaf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.UUIDField(db_index=True, default=uuid.uuid4, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('deleted', models.BooleanField(db_index=True, default=False)),
                ('url', models.CharField(blank=True, db_index=True, max_length=60, null=True, unique=True)),
                ('img_url', models.TextField(blank=True, null=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('caption', models.TextField(blank=True, null=True)),
                ('claps', models.IntegerField(default=0)),
                ('comments', models.IntegerField(default=0)),
                ('allow_comments', models.BooleanField(default=True)),
                ('visibility', models.IntegerField(choices=[(1, 'Private'), (2, 'Unlisted'), (3, 'Public')], default=1)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Leaves',
            },
        ),
        migrations.CreateModel(
            name='ShelfLeaf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.UUIDField(db_index=True, default=uuid.uuid4, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('deleted', models.BooleanField(db_index=True, default=False)),
                ('leaf', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dhanriti.leaf')),
                ('shelf', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dhanriti.shelf')),
            ],
            options={
                'verbose_name_plural': 'Shelf Leaves',
            },
        ),
        migrations.RenameModel(
            old_name='StoryComment',
            new_name='Comment',
        ),
        migrations.RenameModel(
            old_name='StoryCommentLike',
            new_name='CommentLike',
        ),
        migrations.RemoveField(
            model_name='historicalstoryclap',
            name='clapper',
        ),
        migrations.RemoveField(
            model_name='historicalstoryclap',
            name='history_user',
        ),
        migrations.RemoveField(
            model_name='historicalstoryclap',
            name='part',
        ),
        migrations.RemoveField(
            model_name='historicalstorycomment',
            name='commenter',
        ),
        migrations.RemoveField(
            model_name='historicalstorycomment',
            name='history_user',
        ),
        migrations.RemoveField(
            model_name='historicalstorycomment',
            name='parent',
        ),
        migrations.RemoveField(
            model_name='historicalstorycomment',
            name='part',
        ),
        migrations.RemoveField(
            model_name='historicalstorycommentlike',
            name='comment',
        ),
        migrations.RemoveField(
            model_name='historicalstorycommentlike',
            name='history_user',
        ),
        migrations.RemoveField(
            model_name='historicalstorycommentlike',
            name='liker',
        ),
        migrations.RemoveField(
            model_name='storyclap',
            name='clapper',
        ),
        migrations.RemoveField(
            model_name='storyclap',
            name='part',
        ),
        migrations.DeleteModel(
            name='HistoricalFollow',
        ),
        migrations.DeleteModel(
            name='HistoricalStoryClap',
        ),
        migrations.DeleteModel(
            name='HistoricalStoryComment',
        ),
        migrations.DeleteModel(
            name='HistoricalStoryCommentLike',
        ),
        migrations.DeleteModel(
            name='StoryClap',
        ),
        migrations.AddField(
            model_name='clap',
            name='leaf',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dhanriti.leaf'),
        ),
        migrations.AddField(
            model_name='clap',
            name='part',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dhanriti.part'),
        ),
        migrations.AddField(
            model_name='shelf',
            name='leaves',
            field=models.ManyToManyField(through='dhanriti.ShelfLeaf', to='dhanriti.leaf'),
        ),
    ]
